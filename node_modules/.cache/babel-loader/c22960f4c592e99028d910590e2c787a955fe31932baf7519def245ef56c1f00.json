{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saint\\\\webpro\\\\webpro\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GlobalStyle } from \"./style/global-styles\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"__bluecapsule__\");\n    if (storedToken) {\n      setLoggedIn(true);\n    }\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  const handleLogout = () => {\n    // Implement the logout logic, e.g., clearing tokens, updating state, etc.\n    setLoggedIn(false);\n    // Also, remove the token from localStorage\n    localStorage.removeItem(\"__bluecapsule__\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), isLoggedIn ?\n    /*#__PURE__*/\n    // If logged in, show the logout button\n    _jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleLogout,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // If not logged in, show the login link\n    _jsxDEV(Link, {\n      to: \"/login\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"LCpfS0X6AUJI1DI4sDB5o/oXtdQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GlobalStyle","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoggedIn","setLoggedIn","storedToken","localStorage","getItem","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/saint/webpro/webpro/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GlobalStyle } from \"./style/global-styles\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"__bluecapsule__\");\n    if (storedToken) {\n      setLoggedIn(true);\n    }\n  }, []); // Empty dependency array ensures the effect runs only once on component mount\n\n  const handleLogout = () => {\n    // Implement the logout logic, e.g., clearing tokens, updating state, etc.\n    setLoggedIn(false);\n    // Also, remove the token from localStorage\n    localStorage.removeItem(\"__bluecapsule__\");\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n\n      {isLoggedIn ? (\n        // If logged in, show the logout button\n        <button type=\"button\" onClick={handleLogout}>\n          로그아웃\n        </button>\n      ) : (\n        // If not logged in, show the login link\n        <Link to=\"/login\">\n          <button type=\"button\">로그인</button>\n        </Link>\n      )}\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC3D,IAAIF,WAAW,EAAE;MACfD,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAJ,WAAW,CAAC,KAAK,CAAC;IAClB;IACAE,YAAY,CAACG,UAAU,CAAC,iBAAiB,CAAC;EAC5C,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACEZ,OAAA,CAACH,WAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEdX,UAAU;IAAA;IACT;IACAL,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAER,YAAa;MAAAE,QAAA,EAAC;IAE7C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;IAAA;IAET;IACAhB,OAAA,CAACF,IAAI;MAACqB,EAAE,EAAC,QAAQ;MAAAP,QAAA,eACfZ,OAAA;QAAQiB,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACP;EAAA,eACD,CAAC;AAEP;AAACZ,EAAA,CAlCQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}