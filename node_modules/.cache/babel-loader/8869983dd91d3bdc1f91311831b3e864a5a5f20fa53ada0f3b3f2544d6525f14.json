{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saint\\\\webpro\\\\webpro\\\\src\\\\pages\\\\ShowImages.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShowImages = () => {\n  _s();\n  const formatTime = dateTimeString => {\n    const options = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: false\n    };\n    const dateTime = new Date(dateTimeString);\n    return dateTime.toLocaleString(undefined, options);\n  };\n  const [images, setImage] = useState([]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_SERVER_APP}/ShowImage`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch images');\n        }\n        const data = await response.json();\n        setImage(data);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(H2, {\n      children: \"\\uC804\\uCCB4 \\uAC8C\\uC2DC\\uBB3C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: Array.isArray(images) && images.length > 0 ? images.map((image, index) => /*#__PURE__*/_jsxDEV(ImgContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.img,\n          alt: image.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uB4F1\\uB85D \\uC720\\uC800 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 24\n          }, this), image.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uB4F1\\uB85D \\uB0A0\\uC9DC \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 24\n          }, this), \" \", formatTime(image.day)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No images to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ShowImages, \"1anmnu7NZSx+wAbegZkk1IJukQI=\");\n_c = ShowImages;\nexport default ShowImages;\nconst H2 = styled.h2`\n  text-align:center;\n`;\n_c2 = H2;\nconst ImgContainer = styled.div`\n  text-align: center;\n  width:200px;\n  height:150px;\n`;\n_c3 = ImgContainer;\nconst ImageContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n_c4 = ImageContainer;\nconst Image = styled.img`\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n  margin: 5px;\n`;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ShowImages\");\n$RefreshReg$(_c2, \"H2\");\n$RefreshReg$(_c3, \"ImgContainer\");\n$RefreshReg$(_c4, \"ImageContainer\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowImages","_s","formatTime","dateTimeString","options","year","month","day","hour","minute","hour12","dateTime","Date","toLocaleString","undefined","images","setImage","fetchImages","response","fetch","process","env","REACT_APP_API_SERVER_APP","method","headers","ok","Error","data","json","error","console","children","H2","fileName","_jsxFileName","lineNumber","columnNumber","ImageContainer","Array","isArray","length","map","image","index","ImgContainer","src","img","alt","name","_c","h2","_c2","div","_c3","_c4","Image","$RefreshReg$"],"sources":["C:/Users/saint/webpro/webpro/src/pages/ShowImages.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ShowImages: React.FC = () => {\r\n\r\n  const formatTime = (dateTimeString: string): string => {\r\n    const options: Intl.DateTimeFormatOptions = {\r\n      year: 'numeric',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: false,\r\n    };\r\n\r\n    const dateTime = new Date(dateTimeString);\r\n    return dateTime.toLocaleString(undefined, options);\r\n  };\r\n\r\n  const [images, setImage] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await fetch(`${process.env.REACT_APP_API_SERVER_APP}/ShowImage`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch images');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setImage(data);\r\n      } catch (error: any) {\r\n        console.error('Error fetching images:', error);\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <H2>전체 게시물</H2>\r\n\r\n      <ImageContainer>\r\n        {Array.isArray(images) && images.length > 0 ? (\r\n          images.map((image, index) => (\r\n            <ImgContainer key={index}>\r\n              <img src={image.img} alt={image.name} />\r\n              <p>등록 유저 <br/>{image.name}</p>\r\n              <p>등록 날짜 <br /> {formatTime(image.day)}</p>\r\n            </ImgContainer>\r\n          ))\r\n        ) : (\r\n          <p>No images to display</p>\r\n        )}\r\n      </ImageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowImages;\r\n\r\nconst H2 = styled.h2`\r\n  text-align:center;\r\n`\r\nconst ImgContainer = styled.div`\r\n  text-align: center;\r\n  width:200px;\r\n  height:150px;\r\n`;\r\nconst ImageContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 150px;\r\n  height: 150px;\r\n  object-fit: cover;\r\n  margin: 5px;\r\n`;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}