{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saint\\\\webpro\\\\webpro\\\\src\\\\pages\\\\Chat.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const newSocket = new WebSocket('ws://192.168.0.23:4002');\n    newSocket.onopen = () => {\n      console.log('WebSocket connection opened');\n    };\n    newSocket.onmessage = event => {\n      try {\n        const data = event.data;\n        if (typeof data === 'string') {\n          // Regular text message\n          setMessages(prevMessages => [...prevMessages, data]);\n        } else if (data instanceof Blob) {\n          // Handle Blob data as binary\n          const reader = new FileReader();\n          reader.onload = () => {\n            setMessages(prevMessages => [...prevMessages, reader.result]);\n          };\n          reader.readAsArrayBuffer(data);\n        }\n      } catch (error) {\n        console.error('Error in onmessage:', error);\n      }\n    };\n    newSocket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    setSocket(newSocket);\n    return () => {\n      try {\n        newSocket.close();\n      } catch (error) {\n        console.error('Error in cleanup:', error);\n      }\n    };\n  }, []);\n  const sendMessage = () => {\n    try {\n      if (socket && socket.readyState === WebSocket.OPEN) {\n        socket.send(currentMessage);\n        setCurrentMessage('');\n      }\n    } catch (error) {\n      console.error('Error in sendMessage:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(Li, {\n          children: typeof message === 'string' ? message : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: `Binary Data: ${message}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentMessage,\n        onChange: e => setCurrentMessage(e.target.value),\n        placeholder: \"Type your message here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"dv4+aJW5HEOe2HYxhXeOGoUpAQI=\");\n_c = Chat;\nconst Li = styled.li`\n  list-style: none;\n`;\n_c2 = Li;\nexport default Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"Li\");","map":{"version":3,"names":["useState","useEffect","styled","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","currentMessage","setCurrentMessage","socket","setSocket","newSocket","WebSocket","onopen","console","log","onmessage","event","data","prevMessages","Blob","reader","FileReader","onload","result","readAsArrayBuffer","error","onclose","close","sendMessage","readyState","OPEN","send","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","Li","type","value","onChange","e","target","placeholder","onClick","_c","li","_c2","$RefreshReg$"],"sources":["C:/Users/saint/webpro/webpro/src/pages/Chat.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState<(string | ArrayBuffer)[]>([]);\r\n  const [currentMessage, setCurrentMessage] = useState<string>('');\r\n  const [socket, setSocket] = useState<WebSocket | null>(null);\r\n\r\n  useEffect(() => {\r\n    const newSocket = new WebSocket('ws://192.168.0.23:4002');\r\n\r\n    newSocket.onopen = () => {\r\n      console.log('WebSocket connection opened');\r\n    };\r\n\r\n    newSocket.onmessage = (event) => {\r\n      try {\r\n        const data = event.data;\r\n\r\n        if (typeof data === 'string') {\r\n          // Regular text message\r\n          setMessages((prevMessages) => [...prevMessages, data]);\r\n        } else if (data instanceof Blob) {\r\n          // Handle Blob data as binary\r\n          const reader = new FileReader();\r\n          reader.onload = () => {\r\n            setMessages((prevMessages) => [\r\n              ...prevMessages,\r\n              reader.result! as string | ArrayBuffer,\r\n            ]);\r\n          };\r\n          reader.readAsArrayBuffer(data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error in onmessage:', error);\r\n      }\r\n    };\r\n\r\n    newSocket.onclose = () => {\r\n      console.log('WebSocket connection closed');\r\n    };\r\n\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      try {\r\n        newSocket.close();\r\n      } catch (error) {\r\n        console.error('Error in cleanup:', error);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const sendMessage = () => {\r\n    try {\r\n      if (socket && socket.readyState === WebSocket.OPEN) {\r\n        socket.send(currentMessage);\r\n        setCurrentMessage('');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in sendMessage:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Chat Room</h2>\r\n      <div>\r\n        <ul>\r\n          {messages.map((message, index) => (\r\n            <Li key={index}>\r\n              {typeof message === 'string' ? (\r\n                message\r\n              ) : (\r\n                <span>{`Binary Data: ${message}`}</span>\r\n              )}\r\n            </Li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={currentMessage}\r\n          onChange={(e) => setCurrentMessage(e.target.value)}\r\n          placeholder=\"Type your message here\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Li = styled.li`\r\n  list-style: none;\r\n`;\r\n\r\nexport default Chat;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}