{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saint\\\\webpro\\\\webpro\\\\src\\\\pages\\\\ShowImages.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShowImages = () => {\n  _s();\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString();\n  };\n  const [image, setImage] = useState([]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_SERVER_APP}/ShowImage`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch images');\n        }\n        const data = await response.json();\n        setImage(data);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(H2, {\n      children: \"\\uC804\\uCCB4 \\uAC8C\\uC2DC\\uBB3C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), \"\\u3000\", /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: image.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.img,\n          alt: image.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", image.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uB4F1\\uB85D \\uC77C\\uC790: \", formatDate(image.day)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ShowImages, \"hejv0f+LLDIHbanudkOUhG7Gr3g=\");\n_c = ShowImages;\nexport default ShowImages;\nconst H2 = styled.h2`\n  text-align:center;\n`;\n_c2 = H2;\nconst ImageContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n_c3 = ImageContainer;\nconst Image = styled.img`\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n  margin: 5px;\n`;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ShowImages\");\n$RefreshReg$(_c2, \"H2\");\n$RefreshReg$(_c3, \"ImageContainer\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowImages","_s","formatDate","dateString","date","Date","toLocaleDateString","image","setImage","fetchImages","response","fetch","process","env","REACT_APP_API_SERVER_APP","method","headers","ok","Error","data","json","error","console","children","H2","fileName","_jsxFileName","lineNumber","columnNumber","ImageContainer","map","index","src","img","alt","name","day","_c","h2","_c2","div","_c3","Image","$RefreshReg$"],"sources":["C:/Users/saint/webpro/webpro/src/pages/ShowImages.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst ShowImages: React.FC = () => {\r\n\r\n  const formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString();\r\n  };\r\n\r\n  const [image, setImage] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        const response = await fetch(`${process.env.REACT_APP_API_SERVER_APP}/ShowImage`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch images');\r\n        }\r\n\r\n        const data = await response.json();\r\n        setImage(data);\r\n      } catch (error: any) {\r\n        console.error('Error fetching images:', error);\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <H2>전체 게시물</H2>\r\n      　\r\n      <ImageContainer>\r\n        {image.map((image, index) => (\r\n          <div key={index}>\r\n            <img src={image.img} alt={image.name} />\r\n            <p>Name: {image.name}</p>\r\n            <p>등록 일자: {formatDate(image.day)}</p>\r\n          </div>\r\n        ))}\r\n      </ImageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowImages;\r\n\r\nconst H2 = styled.h2 `\r\n  text-align:center;\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 150px;\r\n  height: 150px;\r\n  object-fit: cover;\r\n  margin: 5px;\r\n`;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}