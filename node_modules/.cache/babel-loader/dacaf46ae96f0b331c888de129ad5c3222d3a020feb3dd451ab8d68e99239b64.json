{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { parseJwt } from './Kst_modules';\n{/* 딜레이 적용한 네비게이션 */}\nfunction DelayedNavi() {\n  _s();\n  const navigate = useNavigate();\n  const [delayedNavigation, setDelayedNavigation] = useState(false);\n  const triggerDelayedNavigation = page => {\n    setDelayedNavigation(true);\n    setTimeout(() => {\n      navigate(page);\n    }, 250); // 0.25초\n  };\n\n  return triggerDelayedNavigation;\n}\n_s(DelayedNavi, \"aWXU6DiHiZj0UcMiUcY14etcV2A=\", false, function () {\n  return [useNavigate];\n});\n_c = DelayedNavi;\n{/* 로그아웃 세션 */}\nfunction useLogout() {\n  _s2();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const handleLogout = () => {\n    const userConfirmed = window.confirm('진짜 로그아웃 하게?');\n    if (userConfirmed) {\n      sessionStorage.removeItem('__bluecapsule__');\n      setLoggedIn(false);\n      setTimeout(() => {\n        window.location.reload(); // 새로고침\n      }, 250); // 0.25 초\n    } else {}\n  };\n  return {\n    isLoggedIn,\n    handleLogout\n  };\n}\n_s2(useLogout, \"9ogPs/qKjoLSy/tthqIGD5LodSI=\");\n{/* 로그인 시 토큰 체크 */}\nfunction ChecksToken() {\n  _s3();\n  const navigate = useNavigate();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedToken = sessionStorage.getItem('__bluecapsule__');\n    if (storedToken) {\n      setLoggedIn(true);\n      setTimeout(() => {\n        navigate('/');\n      }, 250); // 0.25초 후 이동\n    }\n  }, []);\n  return isLoggedIn;\n}\n_s3(ChecksToken, \"asbqfMwpmr/vau6tqTIuPjL8PsM=\", false, function () {\n  return [useNavigate];\n});\n_c2 = ChecksToken;\nfunction ShowImagePrivate() {\n  _s4();\n  const [images, setImages] = useState([]);\n  const [userName, setUserName] = useState('');\n  const triggerNavi = DelayedNavi();\n  useEffect(() => {\n    const Token = sessionStorage.getItem('__bluecapsule__');\n    const decodedToken = parseJwt(Token);\n    if (!Token) {\n      alert(\"올바른 경로로 접근하세요.\");\n      return triggerNavi(\"/\");\n    }\n    setUserName(decodedToken.name);\n    const fetchImages = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_SERVER_APP}/ShowImagePrivate`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          throw new Error('Failed to fetch images');\n        }\n        const data = await response.json();\n        setImages(data.filter(images => images.name === userName));\n      } catch (error) {\n        console.error('Error fetching images: ', error);\n      }\n    };\n    fetchImages();\n  }, [userName]);\n}\n_s4(ShowImagePrivate, \"CqKY71tNg8FvFtf3wa9+SJGOacc=\");\n_c3 = ShowImagePrivate;\nexport { DelayedNavi, useLogout, ChecksToken, ShowImagePrivate };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DelayedNavi\");\n$RefreshReg$(_c2, \"ChecksToken\");\n$RefreshReg$(_c3, \"ShowImagePrivate\");","map":{"version":3,"names":["useState","useEffect","useNavigate","parseJwt","DelayedNavi","_s","navigate","delayedNavigation","setDelayedNavigation","triggerDelayedNavigation","page","setTimeout","_c","useLogout","_s2","isLoggedIn","setLoggedIn","handleLogout","userConfirmed","window","confirm","sessionStorage","removeItem","location","reload","ChecksToken","_s3","storedToken","getItem","_c2","ShowImagePrivate","_s4","images","setImages","userName","setUserName","triggerNavi","Token","decodedToken","alert","name","fetchImages","response","fetch","process","env","REACT_APP_API_SERVER_APP","method","headers","ok","Error","data","json","filter","error","console","_c3","$RefreshReg$"],"sources":["C:/Users/saint/webpro/webpro/src/modules/Hooks.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { parseJwt } from './Kst_modules';\r\n\r\n\r\n\r\n{/* 딜레이 적용한 네비게이션 */ }\r\n\r\nfunction DelayedNavi(): (page: string) => void {\r\n    const navigate = useNavigate();\r\n    const [delayedNavigation, setDelayedNavigation] = useState(false);\r\n\r\n    const triggerDelayedNavigation = (page: string) => {\r\n        setDelayedNavigation(true);\r\n\r\n        setTimeout(() => {\r\n            navigate(page);\r\n        }, 250); // 0.25초\r\n    };\r\n\r\n    return triggerDelayedNavigation;\r\n}\r\n\r\n\r\n{/* 로그아웃 세션 */ }\r\nfunction useLogout() {\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n\r\n    const handleLogout = () => {\r\n        const userConfirmed = window.confirm('진짜 로그아웃 하게?');\r\n\r\n        if (userConfirmed) {\r\n            sessionStorage.removeItem('__bluecapsule__');\r\n            setLoggedIn(false);\r\n            setTimeout(() => {\r\n                window.location.reload(); // 새로고침\r\n            }, 250); // 0.25 초\r\n\r\n        } else {\r\n\r\n        }\r\n    };\r\n\r\n    return {\r\n        isLoggedIn,\r\n        handleLogout,\r\n    };\r\n}\r\n\r\n\r\n{/* 로그인 시 토큰 체크 */ }\r\nfunction ChecksToken() {\r\n    const navigate = useNavigate();\r\n    const [isLoggedIn, setLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const storedToken = sessionStorage.getItem('__bluecapsule__');\r\n\r\n        if (storedToken) {\r\n            setLoggedIn(true);\r\n            setTimeout(() => {\r\n                navigate('/');\r\n            }, 250); // 0.25초 후 이동\r\n        }\r\n    }, []);\r\n\r\n    return isLoggedIn;\r\n}\r\n\r\n\r\nfunction ShowImagePrivate() {\r\n\r\n    const [images, setImages] = useState<any[]>([]);\r\n    const [userName, setUserName] = useState<string>('')\r\n    const triggerNavi = DelayedNavi();\r\n    \r\n    \r\n    useEffect(() => {\r\n      const Token: any = sessionStorage.getItem('__bluecapsule__');\r\n      const decodedToken = parseJwt(Token);\r\n      if (!Token) {\r\n        alert(\"올바른 경로로 접근하세요.\")\r\n        return triggerNavi(\"/\")\r\n      }\r\n      setUserName(decodedToken.name);\r\n      \r\n      const fetchImages = async () => {\r\n        try {\r\n          const response = await fetch(`${process.env.REACT_APP_API_SERVER_APP}/ShowImagePrivate`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n          \r\n          if (!response.ok) {\r\n            throw new Error('Failed to fetch images');\r\n          }\r\n          const data = await response.json();\r\n          setImages(data.filter((images: any) => images.name === userName));\r\n        } catch (error: any) {\r\n          console.error('Error fetching images: ', error);\r\n        }\r\n      };\r\n      fetchImages();\r\n    }, [userName]);\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport { DelayedNavi, useLogout, ChecksToken, ShowImagePrivate };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}