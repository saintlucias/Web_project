{"ast":null,"code":"export default function parseJwt(token) {\n  if (!token) {\n    console.error('Token is undefined or null');\n    return null;\n  }\n  const parts = token.split('.');\n  if (parts.length !== 3) {\n    console.error('Token does not have the expected structure');\n    return null;\n  }\n  const base64Url = parts[1];\n  if (!base64Url) {\n    console.error('Base64Url is undefined or null');\n    return null;\n  }\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  try {\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n    return JSON.parse(jsonPayload);\n  } catch (error) {\n    console.error('Error parsing JWT:', error);\n    return null;\n  }\n}","map":{"version":3,"names":["parseJwt","token","console","error","parts","split","length","base64Url","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse"],"sources":["C:/Users/saint/webpro/webpro/src/modules/parseJwt.ts"],"sourcesContent":["export default function parseJwt(token: string): any {\r\n    if (!token) {\r\n      console.error('Token is undefined or null');\r\n      return null;\r\n    }\r\n  \r\n    const parts = token.split('.');\r\n  \r\n    if (parts.length !== 3) {\r\n      console.error('Token does not have the expected structure');\r\n      return null;\r\n    }\r\n  \r\n    const base64Url = parts[1];\r\n  \r\n    if (!base64Url) {\r\n      console.error('Base64Url is undefined or null');\r\n      return null;\r\n    }\r\n  \r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  \r\n    try {\r\n      const jsonPayload = decodeURIComponent(\r\n        atob(base64)\r\n          .split('')\r\n          .map((c) => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\r\n          .join('')\r\n      );\r\n  \r\n      return JSON.parse(jsonPayload);\r\n    } catch (error) {\r\n      console.error('Error parsing JWT:', error);\r\n      return null;\r\n    }\r\n  }\r\n  "],"mappings":"AAAA,eAAe,SAASA,QAAQA,CAACC,KAAa,EAAO;EACjD,IAAI,CAACA,KAAK,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;IAC3C,OAAO,IAAI;EACb;EAEA,MAAMC,KAAK,GAAGH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC;EAE9B,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;IACtBJ,OAAO,CAACC,KAAK,CAAC,4CAA4C,CAAC;IAC3D,OAAO,IAAI;EACb;EAEA,MAAMI,SAAS,GAAGH,KAAK,CAAC,CAAC,CAAC;EAE1B,IAAI,CAACG,SAAS,EAAE;IACdL,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;IAC/C,OAAO,IAAI;EACb;EAEA,MAAMK,MAAM,GAAGD,SAAS,CAACE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EAE9D,IAAI;IACF,MAAMC,WAAW,GAAGC,kBAAkB,CACpCC,IAAI,CAACJ,MAAM,CAAC,CACTH,KAAK,CAAC,EAAE,CAAC,CACTQ,GAAG,CAAEC,CAAC,IAAK,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CACjEC,IAAI,CAAC,EAAE,CACZ,CAAC;IAED,OAAOC,IAAI,CAACC,KAAK,CAACV,WAAW,CAAC;EAChC,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAO,IAAI;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}