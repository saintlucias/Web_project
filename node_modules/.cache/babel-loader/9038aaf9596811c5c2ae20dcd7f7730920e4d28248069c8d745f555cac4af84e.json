{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saint\\\\webpro\\\\webpro\\\\src\\\\pages\\\\ShowImages.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ShowImages = () => {\n  _s();\n  const formatTime = dateTimeString => {\n    const options = {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      hour12: false\n    };\n    const dateTime = new Date(dateTimeString);\n    return dateTime.toLocaleString(undefined, options);\n  };\n  const [images, setImage] = useState([]);\n  const isValidImage = url => {\n    const supportedExtensions = ['.png', '.jpg', '.jpeg'];\n    const extension = url.substring(url.lastIndexOf('.')).toLowerCase();\n    return supportedExtensions.includes(extension);\n  };\n  const fetchImages = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_SERVER_APP}/ShowImage`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch images');\n      }\n      const data = await response.json();\n      setImage(data);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(H2, {\n      children: \"\\uC804\\uCCB4 \\uAC8C\\uC2DC\\uBB3C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: images.map((image, index) => isValidImage(image.img[0]) && /*#__PURE__*/_jsxDEV(ImgContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: image.img,\n          alt: \"\\uC774\\uBBF8\\uC9C0 \\uB85C\\uB4DC \\uC624\\uB958\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(Span, {\n            children: \"\\uB4F1\\uB85D \\uC720\\uC800\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: image.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(Span, {\n            children: \"\\uB4F1\\uB85D \\uC77C\\uC790\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: formatTime(image.day)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ShowImages, \"1anmnu7NZSx+wAbegZkk1IJukQI=\");\n_c = ShowImages;\nexport default ShowImages;\nconst Span = styled.span`\n  font-size: 15px;\n  color: rgba(125, 125, 125, 0.8);\n`;\n_c2 = Span;\nconst H2 = styled.h2`\n  text-align: center;\n`;\n_c3 = H2;\nconst ImgContainer = styled.div`\n  text-align: center;\n  width: 200px;\n  height: 150px;\n`;\n_c4 = ImgContainer;\nconst ImageContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n_c5 = ImageContainer;\nconst Image = styled.img`\n  width: 150px;\n  height: 150px;\n  border-radius: 5px;\n  margin: 5px;\n`;\n_c6 = Image;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ShowImages\");\n$RefreshReg$(_c2, \"Span\");\n$RefreshReg$(_c3, \"H2\");\n$RefreshReg$(_c4, \"ImgContainer\");\n$RefreshReg$(_c5, \"ImageContainer\");\n$RefreshReg$(_c6, \"Image\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","ShowImages","_s","formatTime","dateTimeString","options","year","month","day","hour","minute","hour12","dateTime","Date","toLocaleString","undefined","images","setImage","isValidImage","url","supportedExtensions","extension","substring","lastIndexOf","toLowerCase","includes","fetchImages","response","fetch","process","env","REACT_APP_API_SERVER_APP","method","headers","ok","Error","data","json","error","console","children","H2","fileName","_jsxFileName","lineNumber","columnNumber","ImageContainer","map","image","index","img","ImgContainer","Image","src","alt","Span","name","_c","span","_c2","h2","_c3","div","_c4","_c5","_c6","$RefreshReg$"],"sources":["C:/Users/saint/webpro/webpro/src/pages/ShowImages.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ShowImages: React.FC = () => {\r\n  const formatTime = (dateTimeString: string): string => {\r\n    const options: Intl.DateTimeFormatOptions = {\r\n      year: 'numeric',\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      hour12: false,\r\n    };\r\n\r\n    const dateTime = new Date(dateTimeString);\r\n    return dateTime.toLocaleString(undefined, options);\r\n  };\r\n\r\n  const [images, setImage] = useState<any[]>([]);\r\n\r\n  const isValidImage = (url: string): boolean => {\r\n    const supportedExtensions = ['.png', '.jpg', '.jpeg'];\r\n    const extension = url.substring(url.lastIndexOf('.')).toLowerCase();\r\n    return supportedExtensions.includes(extension);\r\n  };\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_SERVER_APP}/ShowImage`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch images');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setImage(data);\r\n    } catch (error: any) {\r\n      console.error('Error fetching images:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <H2>전체 게시물</H2>\r\n\r\n      <ImageContainer>\r\n        {images.map((image: any, index) => (\r\n          isValidImage(image.img[0]) && (\r\n            <ImgContainer key={index}>\r\n              <Image src={image.img} alt='이미지 로드 오류' />\r\n              <p>\r\n                <Span>등록 유저</Span>\r\n                <br />\r\n                <strong>{image.name}</strong>\r\n              </p>\r\n              <p>\r\n                <Span>등록 일자</Span>\r\n                <br />\r\n                <strong>{formatTime(image.day)}</strong>\r\n              </p>\r\n            </ImgContainer>\r\n          )\r\n        ))}\r\n      </ImageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowImages;\r\n\r\nconst Span = styled.span`\r\n  font-size: 15px;\r\n  color: rgba(125, 125, 125, 0.8);\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n  text-align: center;\r\n`;\r\n\r\nconst ImgContainer = styled.div`\r\n  text-align: center;\r\n  width: 200px;\r\n  height: 150px;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 5px;\r\n  margin: 5px;\r\n`;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}